; reset.asm
;
; Created: 11/1/2023 7:46:25 PM
; Author : brianli
;

.include "m2560def.inc"

.def tmp = r20
.def count = r21
.def incr = r22
.def delay_register = r23

.equ F_CPU = 16000000
.equ DELAY_1MS = F_CPU / 4 / 1000 - 4

.equ PATTERN_1 = 0b10101010
.equ PATTERN_2 = 0b01010101

; Wait macro 256ms
.macro wait
	ser delay_register
wait_loop:
	dec delay_register
	tst delay_register
	breq wait_end
	rcall sleep_1ms
	rjmp wait_loop
wait_end:
	nop
.endmacro

; Flash macro
.macro flash_n_times
push count
clr count
flash_loop:
	cpi count, @0
	breq end_flash_loop
	rcall flash_led
	inc count
	rjmp flash_loop
end_flash_loop:
	pop count
.endmacro

;output
ser tmp
out ddrc, tmp
out ddrg, tmp
clr count
ldi incr, 1

main: 
	flash_n_times 2
end:
	rjmp end

; flashes the led using two pre-defined patterns
flash_led:
	push tmp
	ser tmp
	out ddrc, tmp
	out ddrg, tmp

	ldi tmp, PATTERN_1
	out portc, tmp
	ldi tmp, 2
	out portg, tmp

	wait

	ldi tmp, PATTERN_2
	out portc, tmp
	ldi tmp, 1
	out portg, tmp

	wait

	clr tmp
	out ddrc, tmp
	out ddrg, tmp
	pop tmp
	ret

sleep_1ms:
	push r24
	push r25
	ldi r25, high(DELAY_1MS)
	ldi r24, low(DELAY_1MS)
delayloop_1ms:
	sbiw r25:r24, 1					;r24: r25 -= 1 util 0
	brne delayloop_1ms
	pop r25
	pop r24
	ret

sleep_5ms:
	rcall sleep_1ms
	rcall sleep_1ms
	rcall sleep_1ms
	rcall sleep_1ms
	rcall sleep_1ms
	ret

